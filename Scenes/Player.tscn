[gd_scene load_steps=14 format=1]

[ext_resource path="res://Scripts/Player.gd" type="Script" id=1]
[ext_resource path="res://Sprites/playerset.png" type="Texture" id=2]
[ext_resource path="res://Scripts/PlayerSprite.gd" type="Script" id=3]
[ext_resource path="res://Scenes/Animation.tscn" type="PackedScene" id=4]
[ext_resource path="res://Scenes/Shadow.tscn" type="PackedScene" id=5]
[ext_resource path="res://Scripts/PlayerControl.gd" type="Script" id=6]
[ext_resource path="res://Scripts/Body.gd" type="Script" id=7]
[ext_resource path="res://Scripts/Inventory.gd" type="Script" id=8]
[ext_resource path="res://Fonts/western.fnt" type="BitmapFont" id=9]
[ext_resource path="res://Scripts/HUD.gd" type="Script" id=10]
[ext_resource path="res://Scenes/Health.tscn" type="PackedScene" id=11]

[sub_resource type="RectangleShape2D" id=1]

custom_solver_bias = 0.0
extents = Vector2( 10, 3 )

[sub_resource type="RectangleShape2D" id=2]

custom_solver_bias = 0.0
extents = Vector2( 9, 20 )

[node name="Player" type="KinematicBody2D" groups=[ "player" ]]

z/z = 2
input/pickable = false
shapes/0/shape = SubResource( 1 )
shapes/0/transform = Matrix32( 1, 0, 0, 1, 16, 44 )
shapes/0/trigger = false
collision/layers = 2
collision/mask = 1
collision/margin = 0.08
script/script = ExtResource( 1 )

[node name="Sprite" type="Sprite" parent="."]

texture = ExtResource( 2 )
centered = false
vframes = 32
hframes = 32
script/script = ExtResource( 3 )

[node name="Animation" parent="Sprite" instance=ExtResource( 4 )]

[node name="Shadow" parent="Sprite" instance=ExtResource( 5 )]

z/z = -1

[node name="PlayerControl" type="Node" parent="."]

script/script = ExtResource( 6 )

[node name="Feet" type="CollisionShape2D" parent="."]

transform/pos = Vector2( 16, 44 )
shape = SubResource( 1 )
trigger = false
_update_shape_index = 0

[node name="Body" type="Area2D" parent="."]

editor/display_folded = true
input/pickable = false
shapes/0/shape = SubResource( 2 )
shapes/0/transform = Matrix32( 1, 0, 0, 1, 16, 26 )
shapes/0/trigger = false
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0
collision/layers = 128
collision/mask = 112
script/script = ExtResource( 7 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Body"]

transform/pos = Vector2( 16, 26 )
shape = SubResource( 2 )
trigger = false
_update_shape_index = 0

[node name="HUD" type="CanvasLayer" parent="."]

layer = 1
offset = Vector2( 0, 0 )
rotation = 0.0
scale = Vector2( 1, 1 )

[node name="Inventory" type="Node2D" parent="HUD"]

editor/display_folded = true
script/script = ExtResource( 8 )

[node name="DescriptionLabel" type="Label" parent="HUD/Inventory"]

focus/ignore_mouse = true
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 0
margin/left = 0.0
margin/top = 0.0
margin/right = 40.0
margin/bottom = 14.0
custom_fonts/font = ExtResource( 9 )
text = "It is a long established fact that a reader will be \ndistracted by the readable content of a page when looking at its\n layout. The point of using Lorem Ipsum is that \nit has a more-or-less normal distribution of lette\nrs, as opposed to using \'Content here, content h\nere\', making it look like readable English. Many d\nesktop publishing packages and web page editors\n now use Lorem Ipsum as their default model text\n\n, and a search for \'lorem ipsum\' will uncover many \nweb sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like)."
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="HUD" type="Node2D" parent="HUD"]

editor/display_folded = true
script/script = ExtResource( 10 )

[node name="AmmoFlashTimer" type="Timer" parent="HUD/HUD"]

process_mode = 1
wait_time = 0.5
one_shot = true
autostart = false

[node name="InvulnTimer" type="Timer" parent="."]

process_mode = 1
wait_time = 1.0
one_shot = true
autostart = false

[node name="Health" parent="." instance=ExtResource( 11 )]

[connection signal="equipped_item" from="HUD/Inventory" to="." method="_on_inventory_equipped_item"]

[connection signal="timeout" from="InvulnTimer" to="Body" method="_on_invuln_timer_timeout"]

[connection signal="killed" from="Health" to="Body" method="_on_killed"]


